<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Player</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.9)), url('<%= song.album_cover %>');
            background-size: cover;
            background-position: center;
            height: 100vh;
            color: white;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }

        .player-container {
            max-width: 450px;
            width: 100%;
            padding: 20px;
            background-color: rgba(0, 0, 0, 0.8);
            border-radius: 15px;
            box-shadow: 0px 8px 30px rgba(0, 0, 0, 0.5);
            display: flex;
            flex-direction: column;
            align-items: center;
            position: relative;
        }

        .album-cover {
            width: 150px;
            height: 150px;
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.5);
            margin-bottom: 20px;
        }

        .song-title {
            font-size: 1.5rem;
            font-weight: bold;
            text-align: center;
            margin-bottom: 5px;
        }

        .artist, .uploader-name {
            font-size: 0.9rem;
            color: #d1d1d1;
            text-align: center;
            margin-bottom: 10px;
        }

        .controls {
            display: flex;
            justify-content: space-between;
            align-items: center;
            width: 100%;
            margin: 20px 0;
        }

        .control-button {
            background-color: rgba(255, 255, 255, 0.1);
            border: none;
            color: white;
            font-size: 30px;
            width: 60px;
            height: 60px;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            transition: background-color 0.3s ease, transform 0.2s ease;
            margin: 0 10px;
            box-shadow: 0 3px 15px rgba(0, 0, 0, 0.2);
        }

        .control-button:hover {
            background-color: rgba(255, 255, 255, 0.3);
            transform: scale(1.1);
        }

        .playback-bar {
            width: 100%;
            height: 5px;
            background-color: #404040;
            border-radius: 5px;
            margin-bottom: 15px;
            overflow: hidden;
            position: relative;
        }

        .playback-bar-progress {
            background-color: #1DB954;
            height: 100%;
            width: 0;
            position: absolute;
            top: 0;
            left: 0;
            border-radius: 5px;
            transition: width 0.3s;
        }

        .volume-control {
            width: 100%;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .volume-bar {
            width: 150px;
            height: 5px;
            background-color: #404040;
            border-radius: 5px;
            position: relative;
            cursor: pointer;
            margin-left: 10px;
        }

        .volume-bar-progress {
            background-color: #1DB954;
            height: 100%;
            width: 100%;
            border-radius: 5px;
        }

        .volume-icon {
            font-size: 20px;
        }

        .mic-icon {
            font-size: 20px;
            margin-right: 10px;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .player-container {
                width: 95%;
            }
        }
    </style>
</head>

<body>
    <div class="player-container">
        <img src="<%= song.album_cover %>" alt="Album Cover" class="album-cover">
        <div class="song-title"><%= song.song_title %></div>
        <div class="artist"><%= song.artist_name %></div>
        <div class="uploader-name"><%= song.uploader_name %></div>

        <div class="playback-bar">
            <div id="playback-bar-progress" class="playback-bar-progress"></div>
        </div>

        <div class="controls">
            <button id="prev-btn" class="control-button">‚èÆ</button>
            <button id="play-pause-btn" class="control-button">‚èØ</button>
            <button id="next-btn" class="control-button">‚è≠</button>
        </div>

        <div class="volume-control">
            <span class="mic-icon">üé§</span>
            <span class="volume-icon">üîä</span>
            <div class="volume-bar">
                <div id="volume-bar-progress" class="volume-bar-progress"></div>
            </div>
        </div>
    </div>

    <audio id="audio-player" src="/uploads/<%= song.filename %>" preload="metadata"></audio>

    <script>
        const audioPlayer = document.getElementById('audio-player');
        const playPauseBtn = document.getElementById('play-pause-btn');
        const playbackBarProgress = document.getElementById('playback-bar-progress');
        const volumeBar = document.querySelector('.volume-bar');
        const volumeBarProgress = document.getElementById('volume-bar-progress');
        let isPlaying = false;

        // Play/pause functionality
        function togglePlayPause() {
            if (isPlaying) {
                audioPlayer.pause();
                playPauseBtn.textContent = '‚èØ';
            } else {
                audioPlayer.play().catch((error) => console.error('Error playing audio:', error));
                playPauseBtn.textContent = '‚è∏';
            }
            isPlaying = !isPlaying;
        }

        playPauseBtn.addEventListener('click', togglePlayPause);

        // Playback progress bar
        audioPlayer.addEventListener('timeupdate', () => {
            const percentage = (audioPlayer.currentTime / audioPlayer.duration) * 100;
            playbackBarProgress.style.width = percentage + '%';
        });

        // Previous button resets song to the start
        document.getElementById('prev-btn').addEventListener('click', () => {
            audioPlayer.currentTime = 0;
        });

        // Next button skips to the end of the song
        document.getElementById('next-btn').addEventListener('click', () => {
            audioPlayer.currentTime = audioPlayer.duration;
        });

        // Volume control functionality
        volumeBar.addEventListener('click', (e) => {
            const rect = volumeBar.getBoundingClientRect();
            const clickX = e.clientX - rect.left;
            const volume = clickX / volumeBar.offsetWidth;

            // Set the audio volume
            audioPlayer.volume = volume;

            // Update the volume bar progress
            volumeBarProgress.style.width = `${volume * 100}%`;
        });

        // Set initial volume
        audioPlayer.volume = 1;
    </script>
</body>

</html>